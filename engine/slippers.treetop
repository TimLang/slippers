grammar Slippers
	
  rule expression
	 before:some_text templated_expression space after:expression <ExpressionNode> / some_text
  end
  
  rule templated_expression
    "$" foo "$" <TemplatedExpressionNode>
  end
  
  rule foo
    apply_attribute_to_template / template / attribute
  end
  
  rule apply_attribute_to_template 
    attribute apply_op template <ApplyAttributeToTemplateNode>
  end
  
  rule template
    template_path "()" <TemplateNode>
  end
	  
  rule attribute
  	word <AttributeNode>
  end
	
  rule some_text
    not_delimiter* {
 	  def eval(*args)
 	   to_s
 	  end
      def to_s
        text_value
      end
    }
  end
  
  rule not_delimiter 
    !"$" . {
      def to_s
        text_value
      end
    }
  end
	
  rule template_path
    word ("/" word)? {
      def to_s
        text_value
      end
    }
  end
  
  rule word
	[a-zA-Z]+ {
      def to_s
        text_value
      end
      }
  end
	
  rule space
    ' '* {
        def eval(object_to_render=nil, template_group=nil)
          to_s
        end
        def to_s
            text_value
        end
      }
  end
  
  rule apply_op
   ':' {
      def to_s
        text_value
      end
   }
  end
	
end